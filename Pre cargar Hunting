-- -------------------------------------------------------------------------------------------------------------------------- --
-- --------------------------------------------NUEVOS SELLERS POR MES BASICO------------------------------------------------- --
-- -------------------------------------------------------------------------------------------------------------------------- --
--CALL MELI_LIB.PR_DROP_TABLE ('TABLEAU_TBL','PROSPECTOS_SITIO');

drop table TABLEAU_TBL.PROSPECTOS_SITIO;

CREATE MULTISET TABLE TABLEAU_TBL.PROSPECTOS_SITIO AS (
SEL
CC.SIT_SITE_ID_CUS SIT_SITE_ID,
CC.CUS_CUST_ID,
CC.CUS_NICKNAME,
CC.CUS_CUST_EMPRESA,
CC.CUS_CUST_STATUS,
TRUNC(CAST(CC.CUS_FIRST_PUBLICATION AS DATE), 'MONTH') TIM_MONTH, 
CAST(CC.CUS_FIRST_PUBLICATION AS DATE) FECHA_TRACKEO,
CAST(CC.CUS_FIRST_PUBLICATION AS DATE) + 60 FECHA_WARNING_S1,
DATE'1900-01-01' FECHA_RESULTADO_S1,
'N/A' FLAG_W1,
'N/A' FLAG_R1,
CAST(CC.CUS_FIRST_PUBLICATION AS DATE) + 90 FECHA_WARNING_S2,
CAST(CC.CUS_FIRST_PUBLICATION AS DATE) + 120 FECHA_BAJA_S2,
DATE'1900-01-01' FECHA_RESULTADO_S2,
'N/A' FLAG_W2,
'N/A' FLAG_R2,
CAST(CC.CUS_FIRST_PUBLICATION AS DATE)  + 150 FECHA_WARNING_S3,
CAST(CC.CUS_FIRST_PUBLICATION AS DATE) + 180 FECHA_BAJA_S3,
DATE'1900-01-01' FECHA_RESULTADO_S3,
'N/A' FLAG_W3,
'N/A' FLAG_R3,
CAST(CC.CUS_RU_SINCE_DT AS DATE) CUS_RU_SINCE_DT,
CAST(CC.CUS_FIRST_PUBLICATION AS DATE) CUS_FIRST_PUBLICATION,
CAST(CC.CUS_FIRST_SELL AS DATE) CUS_FIRST_SELL,
(CAST(CC.CUS_FIRST_SELL AS DATE)-CAST(CC.CUS_FIRST_PUBLICATION AS DATE) ) as TIME_OF_SELL,
CAST(CC.CUS_LAST_SELL AS DATE) CUS_LAST_SELL,
CAST(CC.CUS_LAST_PUBLICATION AS DATE) CUS_LAST_PUBLICATION,
CK.CUS_DOC_TYPE,
CK.CUS_TYPE_ID,
CC.CUS_CUST_DOC_TYPE,
REG.REG_CUST_DOC_TYPE,
'N/A' TAG1,
'N/A' TAG2,
CURRENT_TIMESTAMP (0) FECHA_INSERT,
CURRENT_TIMESTAMP (0) FECHA_UPDATE
FROM  WHOWNER.LK_CUS_CUSTOMERS_DATA CC
JOIN WHOWNER.LK_SEGMENTO_SELLERS SEG
ON SEG.CUS_CUST_ID_SEL = CC.CUS_CUST_ID AND SEGMENTO ='LONG TAIL' AND MLIDER_FLAG ='N'
LEFT JOIN WHOWNER.LK_KYC_CUSTOMERS CK ON CK.CUS_CUST_ID = CC.CUS_CUST_ID
LEFT JOIN WHOWNER.LK_REG_CUSTOMERS REG ON REG.CUS_CUST_ID = CC.CUS_CUST_ID

WHERE CC.SIT_SITE_ID_CUS IN ('MLM','MLA','MLB')
AND TRUNC(CAST(CC.CUS_FIRST_PUBLICATION AS DATE), 'MONTH') >=  ADD_MONTHS( TRUNC(DATE-1, 'MONTH'),-7)-- fecha dinamica
-- AND TRUNC(CAST(CC.CUS_LAST_BUY AS DATE), 'MONTH') >= ADD_MONTHS( TRUNC(DATE-1, 'MONTH'),-3)
AND CC.CUS_FIRST_PUBLICATION IS NOT NULL

)WITH DATA PRIMARY INDEX (SIT_SITE_ID,TIM_MONTH);



-- -------------------------------------------------------------------------------------------------------------------------- --
-- --------------------------------------------Tiempos de respuesta ---------------------------------------------------- --
-- -------------------------------------------------------------------------------------------------------------------------- --
drop table TABLEAU_TBL.BT_MKT_SELLER_TMR ;

create multiset  table  TABLEAU_TBL.BT_MKT_SELLER_TMR as (

SELECT 
--AUX.sit_site_id,
--AUX.TIM_DAY,
AUX.TIM_MONTH,
--AUX.VERTICAL,
AUX.CUS_CUST_ID_SEL,
sum(case when AUX.WEEKEND_FLAG = 1 then AUX.BUYERS end) BUYERS_QUESTION_WEEKEND,
sum(case when AUX.WEEKEND_FLAG = 0 and AUX.WORKING_HOURS_FLAG = 1 then AUX.BUYERS END) BUYERS_QUES_WEEK_WORKING_HOURS,
sum(case when AUX.WEEKEND_FLAG = 0 and AUX.POST_WORK_FLAG = 1 then AUX.BUYERS END) BUYERS_QUES_POST_WORK_HOURS,
sum(case when AUX.WEEKEND_FLAG = 0 and AUX.NIGHT_FLAG = 1 then AUX.BUYERS END) BUYERS_QUES_NIGHT_HOURS,
sum(AUX.BUYERS) BUYERS_QUES_TOTAL,
sum(case when AUX.WEEKEND_FLAG = 1 then AUX.ANSWERS end) ANSWERS_TMR_WEEKEND,
sum(case when AUX.WEEKEND_FLAG = 0 and AUX.WORKING_HOURS_FLAG = 1 then AUX.ANSWERS END) ANSWERS_TMR_WEEK_WORKING_HOURS,
sum(case when AUX.WEEKEND_FLAG = 0 and AUX.POST_WORK_FLAG = 1 then AUX.ANSWERS END) ANSWERS_TMR_POST_WORK_HOURS,
sum(case when AUX.WEEKEND_FLAG = 0 and AUX.NIGHT_FLAG = 1 then AUX.ANSWERS END) ANSWERS_TMR_NIGHT_HOURS,
sum(AUX.ANSWERS) ANSWERS_TMR_TOTAL,
sum(case when AUX.WEEKEND_FLAG = 1 then AUX.MINUTES_TOTAL end) MINUTES_TMR_WEEKEND,
sum(case when AUX.WEEKEND_FLAG = 0 and AUX.WORKING_HOURS_FLAG = 1 then AUX.MINUTES_TOTAL END) MINUTES_TMR_WEEK_WORKING_HOURS,
sum(case when AUX.WEEKEND_FLAG = 0 and AUX.POST_WORK_FLAG = 1 then AUX.MINUTES_TOTAL END) MINUTES_TMR_POST_WORK_HOURS,
sum(case when AUX.WEEKEND_FLAG = 0 and AUX.NIGHT_FLAG = 1 then AUX.MINUTES_TOTAL END) MINUTES_TMR_NIGHT_HOURS,
sum(AUX.MINUTES_TOTAL) MINUTES_TMR_TOTAL
 
FROM
(SELECT 
a11.sit_site_id,
--cast(a11.question_dt as date) TIM_DAY ,
TRUNC(CAST(a11.question_dt AS DATE), 'MONTH') TIM_MONTH,
categ.VERTICAL, 
  
case when td_day_of_week(question_dt + cast(tz.diff_usa as interval hour)) in (1,7) then 1 else 0 end WEEKEND_FLAG ,
case when extract(hour from (question_dt+ cast(tz.diff_usa as interval hour))) between 8 and 18 then 1 else 0 end WORKING_HOURS_FLAG,
case when extract(hour from (question_dt+ cast(tz.diff_usa as interval hour))) between 19 and 22 then 1 else 0 end POST_WORK_FLAG,
case when extract(hour from (question_dt+ cast(tz.diff_usa as interval hour))) between 0 and 7 then 1 else 
     case when extract(hour from (question_dt+ cast(tz.diff_usa as interval hour))) = 23 then 1 end end NIGHT_FLAG ,
a11.SELLER_ID cus_cust_id_sel,
count(distinct cus_cust_id) buyers,
sum(1)  QUESTIONS,
count(a11.answer_dt) ANSWERS,
SUM(CASE WHEN (a11.answer_dt  is not null) THEN (
EXTRACT(DAY FROM ((a11.answer_dt - a11.question_dt) DAY(4) TO SECOND(6))) * 1440 
+ EXTRACT(HOUR FROM ((a11.answer_dt - a11.question_dt) DAY(4) TO SECOND(6))) * 60
+ EXTRACT(MINUTE FROM ((a11.answer_dt - a11.question_dt) DAY(4) TO SECOND(6)))
+ EXTRACT(SECOND FROM ((a11.answer_dt - a11.question_dt) DAY(4) TO SECOND(6))) / 60
) ELSE null END) MINUTES_TOTAL
from   WHOWNER.BT_ITEM_QUESTIONS_SIX_MONTH a11  
   join WHOWNER.LK_ITE_ITEMS_PH item 
     on 'TODATE' = item.photo_id
     and a11.sit_site_id = item.sit_site_id
     and a11.ite_item_id = item.ite_item_id
       -- join UNIVERSO_SELLERS a2 on item.cus_cust_id_sel = a2.cus_cust_id_sel 
   join WHOWNER.AG_LK_CAT_CATEGORIES_PH categ
     on item.PHOTO_ID = categ.photo_id
     and item.cat_categ_id = categ.CAT_CATEG_ID_L7
     and item.sit_site_id = categ.sit_site_id
left join whowner.api_timezones tz on cast(a11.question_dt as date)=tz.tz_date and a11.sit_site_id=tz.sit_site_id
--WHERE cast(a11.question_dt as date) between date -2 and date -1
WHERE TRUNC(CAST(a11.question_dt AS DATE), 'MONTH') >= ADD_MONTHS( TRUNC(DATE-1, 'MONTH'),-7)
 AND item.mkt_marketplace_id = 'TM'
 
 and a11.SIT_SITE_ID in ('MLA','MLB','MLM')
 AND item.photo_id = 'TODATE'
GROUP BY 1,2,3,4,5,6,7,8
) as AUX
join TABLEAU_TBL.PROSPECTOS_SITIO CC
on AUX.CUS_CUST_ID_SEL=CC.CUS_CUST_ID
--and CC.TIM_MONTH=AUX.TIM_MONTH


where AUX.sit_site_id is not null and 
AUX.TIM_MONTH is not null and 
AUX.VERTICAL is not null and 
AUX.CUS_CUST_ID_SEL is not null  
group by  1,2
) with data 
;


-- -------------------------------------------------------------------------------------------------------------------------- --
-- --------------------------------------------LIVE LISTINGS FOTO MENSUAL---------------------------------------------------- --
-- -------------------------------------------------------------------------------------------------------------------------- --
--CALL MELI_LIB.PR_DROP_TABLE ('TABLEAU_TBL','LL');
drop table TABLEAU_TBL.LL;
CREATE MULTISET TABLE TABLEAU_TBL.LL AS (
SEL LL.SIT_SITE_ID, TRUNC(LL.TIM_DAY,'MONTH') TIM_MONTH, LL.CUS_CUST_ID_SEL CUS_CUST_ID, SUM (LIVELISTINGS) LL
-- SUM(CASE WHEN LL.CBO_COMBO_ID = UPPER('J')  THEN LIVELISTINGS ELSE 0 END ) LL_PSJ,
-- SUM(CASE WHEN LL.CBO_COMBO_ID <> UPPER('J') THEN LIVELISTINGS ELSE 0 END ) LL_NOPSJ
FROM WHOWNER.BT_LIVE_LISTINGS_SEL LL
JOIN WHOWNER_TBL_DESA.CALENDAR CAL
ON  CAL.CALENDAR_DATE = CASE WHEN LL.TIM_DAY = DATE-1 THEN ADD_MONTHS(( DATE-1 - EXTRACT(DAY FROM DATE-1) + 1),1)-1  ELSE TIM_DAY END
AND LL.PHOTO_ID='TODATE'
AND LL.TIM_DAY between '2020-09-01' and '2020-09-30'
 --AND LL.TIM_DAY between  ADD_MONTHS( TRUNC(DATE-1, 'MONTH'),-3) and TRUNC(DATE, 'MONTH')
-->=   ADD_MONTHS( TRUNC(DATE-1, 'MONTH'),-3) -- Deberia ser la fecha de trackeo del seller
JOIN  TABLEAU_TBL.PROSPECTOS_SITIO PR
ON LL.CUS_CUST_ID_SEL= PR.CUS_CUST_ID
-- AND LL.SIT_SITE_ID = PR.SIT_SITE_ID
WHERE LL.SIT_SITE_ID IN ('MLA','MLM','MLB')
AND LL.ITE_TIPO_PROD ='N'
GROUP BY 1,2,3
)WITH DATA PRIMARY INDEX (SIT_SITE_ID, TIM_MONTH);


insert into TABLEAU_TBL.LL
SEL LL.SIT_SITE_ID, TRUNC(LL.TIM_DAY,'MONTH') TIM_MONTH, LL.CUS_CUST_ID_SEL CUS_CUST_ID, SUM (LIVELISTINGS) LL
-- SUM(CASE WHEN LL.CBO_COMBO_ID = UPPER('J')  THEN LIVELISTINGS ELSE 0 END ) LL_PSJ,
-- SUM(CASE WHEN LL.CBO_COMBO_ID <> UPPER('J') THEN LIVELISTINGS ELSE 0 END ) LL_NOPSJ
FROM WHOWNER.BT_LIVE_LISTINGS_SEL LL
JOIN WHOWNER_TBL_DESA.CALENDAR CAL
ON  CAL.CALENDAR_DATE = CASE WHEN LL.TIM_DAY = DATE-1 THEN ADD_MONTHS(( DATE-1 - EXTRACT(DAY FROM DATE-1) + 1),1)-1  ELSE TIM_DAY END
AND LL.PHOTO_ID='TODATE'
AND LL.TIM_DAY between '2020-10-01' and '2020-10-31' -- ADD_MONTHS( TRUNC(DATE-1, 'MONTH'),-3) and TRUNC(DATE, 'MONTH')
-->=   ADD_MONTHS( TRUNC(DATE-1, 'MONTH'),-3) -- Deberia ser la fecha de trackeo del seller
JOIN  TABLEAU_TBL.PROSPECTOS_SITIO PR
ON LL.CUS_CUST_ID_SEL= PR.CUS_CUST_ID
-- AND LL.SIT_SITE_ID = PR.SIT_SITE_ID
WHERE LL.SIT_SITE_ID IN ('MLA','MLM','MLB')
AND LL.ITE_TIPO_PROD ='N'
GROUP BY 1,2,3;

insert into TABLEAU_TBL.LL
SEL LL.SIT_SITE_ID, TRUNC(LL.TIM_DAY,'MONTH') TIM_MONTH, LL.CUS_CUST_ID_SEL CUS_CUST_ID, SUM (LIVELISTINGS) LL
-- SUM(CASE WHEN LL.CBO_COMBO_ID = UPPER('J')  THEN LIVELISTINGS ELSE 0 END ) LL_PSJ,
-- SUM(CASE WHEN LL.CBO_COMBO_ID <> UPPER('J') THEN LIVELISTINGS ELSE 0 END ) LL_NOPSJ
FROM WHOWNER.BT_LIVE_LISTINGS_SEL LL
JOIN WHOWNER_TBL_DESA.CALENDAR CAL
ON  CAL.CALENDAR_DATE = CASE WHEN LL.TIM_DAY = DATE-1 THEN ADD_MONTHS(( DATE-1 - EXTRACT(DAY FROM DATE-1) + 1),1)-1  ELSE TIM_DAY END
AND LL.PHOTO_ID='TODATE'
AND LL.TIM_DAY between '2020-11-01' and '2020-11-30' -- ADD_MONTHS( TRUNC(DATE-1, 'MONTH'),-3) and TRUNC(DATE, 'MONTH')
-->=   ADD_MONTHS( TRUNC(DATE-1, 'MONTH'),-3) -- Deberia ser la fecha de trackeo del seller
JOIN  TABLEAU_TBL.PROSPECTOS_SITIO PR
ON LL.CUS_CUST_ID_SEL= PR.CUS_CUST_ID
-- AND LL.SIT_SITE_ID = PR.SIT_SITE_ID
WHERE LL.SIT_SITE_ID IN ('MLA','MLM','MLB')
AND LL.ITE_TIPO_PROD ='N'
GROUP BY 1,2,3;

insert into TABLEAU_TBL.LL
SEL LL.SIT_SITE_ID, TRUNC(LL.TIM_DAY,'MONTH') TIM_MONTH, LL.CUS_CUST_ID_SEL CUS_CUST_ID, SUM (LIVELISTINGS) LL
-- SUM(CASE WHEN LL.CBO_COMBO_ID = UPPER('J')  THEN LIVELISTINGS ELSE 0 END ) LL_PSJ,
-- SUM(CASE WHEN LL.CBO_COMBO_ID <> UPPER('J') THEN LIVELISTINGS ELSE 0 END ) LL_NOPSJ
FROM WHOWNER.BT_LIVE_LISTINGS_SEL LL
JOIN WHOWNER_TBL_DESA.CALENDAR CAL
ON  CAL.CALENDAR_DATE = CASE WHEN LL.TIM_DAY = DATE-1 THEN ADD_MONTHS(( DATE-1 - EXTRACT(DAY FROM DATE-1) + 1),1)-1  ELSE TIM_DAY END
AND LL.PHOTO_ID='TODATE'
AND LL.TIM_DAY between '2020-12-01' and '2020-12-31' -- ADD_MONTHS( TRUNC(DATE-1, 'MONTH'),-3) and TRUNC(DATE, 'MONTH')
-->=   ADD_MONTHS( TRUNC(DATE-1, 'MONTH'),-3) -- Deberia ser la fecha de trackeo del seller
JOIN  TABLEAU_TBL.PROSPECTOS_SITIO PR
ON LL.CUS_CUST_ID_SEL= PR.CUS_CUST_ID
-- AND LL.SIT_SITE_ID = PR.SIT_SITE_ID
WHERE LL.SIT_SITE_ID IN ('MLA','MLM','MLB')
AND LL.ITE_TIPO_PROD ='N'
GROUP BY 1,2,3;

insert into TABLEAU_TBL.LL
SEL LL.SIT_SITE_ID, TRUNC(LL.TIM_DAY,'MONTH') TIM_MONTH, LL.CUS_CUST_ID_SEL CUS_CUST_ID, SUM (LIVELISTINGS) LL
-- SUM(CASE WHEN LL.CBO_COMBO_ID = UPPER('J')  THEN LIVELISTINGS ELSE 0 END ) LL_PSJ,
-- SUM(CASE WHEN LL.CBO_COMBO_ID <> UPPER('J') THEN LIVELISTINGS ELSE 0 END ) LL_NOPSJ
FROM WHOWNER.BT_LIVE_LISTINGS_SEL LL
JOIN WHOWNER_TBL_DESA.CALENDAR CAL
ON  CAL.CALENDAR_DATE = CASE WHEN LL.TIM_DAY = DATE-1 THEN ADD_MONTHS(( DATE-1 - EXTRACT(DAY FROM DATE-1) + 1),1)-1  ELSE TIM_DAY END
AND LL.PHOTO_ID='TODATE'
AND LL.TIM_DAY between '2021-01-01' and '2021-01-31' -- ADD_MONTHS( TRUNC(DATE-1, 'MONTH'),-3) and TRUNC(DATE, 'MONTH')
-->=   ADD_MONTHS( TRUNC(DATE-1, 'MONTH'),-3) -- Deberia ser la fecha de trackeo del seller
JOIN  TABLEAU_TBL.PROSPECTOS_SITIO PR
ON LL.CUS_CUST_ID_SEL= PR.CUS_CUST_ID
-- AND LL.SIT_SITE_ID = PR.SIT_SITE_ID
WHERE LL.SIT_SITE_ID IN ('MLA','MLM','MLB')
AND LL.ITE_TIPO_PROD ='N'
GROUP BY 1,2,3;

insert into TABLEAU_TBL.LL
SEL LL.SIT_SITE_ID, TRUNC(LL.TIM_DAY,'MONTH') TIM_MONTH, LL.CUS_CUST_ID_SEL CUS_CUST_ID, SUM (LIVELISTINGS) LL
-- SUM(CASE WHEN LL.CBO_COMBO_ID = UPPER('J')  THEN LIVELISTINGS ELSE 0 END ) LL_PSJ,
-- SUM(CASE WHEN LL.CBO_COMBO_ID <> UPPER('J') THEN LIVELISTINGS ELSE 0 END ) LL_NOPSJ
FROM WHOWNER.BT_LIVE_LISTINGS_SEL LL
JOIN WHOWNER_TBL_DESA.CALENDAR CAL
ON  CAL.CALENDAR_DATE = CASE WHEN LL.TIM_DAY = DATE-1 THEN ADD_MONTHS(( DATE-1 - EXTRACT(DAY FROM DATE-1) + 1),1)-1  ELSE TIM_DAY END
AND LL.PHOTO_ID='TODATE'
AND LL.TIM_DAY between '2021-02-01' and '2021-02-28' -- ADD_MONTHS( TRUNC(DATE-1, 'MONTH'),-3) and TRUNC(DATE, 'MONTH')
-->=   ADD_MONTHS( TRUNC(DATE-1, 'MONTH'),-3) -- Deberia ser la fecha de trackeo del seller
JOIN  TABLEAU_TBL.PROSPECTOS_SITIO PR
ON LL.CUS_CUST_ID_SEL= PR.CUS_CUST_ID
-- AND LL.SIT_SITE_ID = PR.SIT_SITE_ID
WHERE LL.SIT_SITE_ID IN ('MLA','MLM','MLB')
AND LL.ITE_TIPO_PROD ='N'
GROUP BY 1,2,3;

insert into TABLEAU_TBL.LL
SEL LL.SIT_SITE_ID, TRUNC(LL.TIM_DAY,'MONTH') TIM_MONTH, LL.CUS_CUST_ID_SEL CUS_CUST_ID, SUM (LIVELISTINGS) LL
-- SUM(CASE WHEN LL.CBO_COMBO_ID = UPPER('J')  THEN LIVELISTINGS ELSE 0 END ) LL_PSJ,
-- SUM(CASE WHEN LL.CBO_COMBO_ID <> UPPER('J') THEN LIVELISTINGS ELSE 0 END ) LL_NOPSJ
FROM WHOWNER.BT_LIVE_LISTINGS_SEL LL
JOIN WHOWNER_TBL_DESA.CALENDAR CAL
ON  CAL.CALENDAR_DATE = CASE WHEN LL.TIM_DAY = DATE-1 THEN ADD_MONTHS(( DATE-1 - EXTRACT(DAY FROM DATE-1) + 1),1)-1  ELSE TIM_DAY END
AND LL.PHOTO_ID='TODATE'
AND LL.TIM_DAY between '2021-03-01' and '2021-03-31' -- ADD_MONTHS( TRUNC(DATE-1, 'MONTH'),-3) and TRUNC(DATE, 'MONTH')
-->=   ADD_MONTHS( TRUNC(DATE-1, 'MONTH'),-3) -- Deberia ser la fecha de trackeo del seller
JOIN  TABLEAU_TBL.PROSPECTOS_SITIO PR
ON LL.CUS_CUST_ID_SEL= PR.CUS_CUST_ID
-- AND LL.SIT_SITE_ID = PR.SIT_SITE_ID
WHERE LL.SIT_SITE_ID IN ('MLA','MLM','MLB')
AND LL.ITE_TIPO_PROD ='N'
GROUP BY 1,2,3;


-- -------------------------------------------------------------------------------------------------------------------------- --
-- -------------------------------------LIMPIAR PROSOPECTOS CON LL USADOS---------------------------------------------------- --
-- -------------------------------------------------------------------------------------------------------------------------- --
DELETE FROM TABLEAU_TBL.PROSPECTOS_SITIO PR
WHERE PR.CUS_CUST_ID IN(
(SELECT PR.CUS_CUST_ID FROM TABLEAU_TBL.PROSPECTOS_SITIO PR
LEFT JOIN (SELECT DISTINCT (CUS_CUST_ID) FROM TABLEAU_TBL.LL) LL
ON PR.CUS_CUST_ID = LL.CUS_CUST_ID
WHERE LL.CUS_CUST_ID IS NULL));
-- -------------------------------------------------------------------------------------------------------------------------- --
-- ---------------------------------------------KPIS SELLERS FOTO MENSUAL---------------------------------------------------- --
-- -------------------------------------------------------------------------------------------------------------------------- --
--CALL MELI_LIB.PR_DROP_TABLE ('TABLEAU_TBL','KPIS');
drop table TABLEAU_TBL.KPIS;
CREATE MULTISET TABLE TABLEAU_TBL.KPIS AS (
SEL ITE.SIT_SITE_ID, TRUNC (DATE-1,'MONTH') TIM_MONTH, ITE.CUS_CUST_ID_SEL CUS_CUST_ID, REP.REP_CURRENT_LEVEL,
REP_CLAIMS_RATE, REP_DELAYED_HT_RATE, REP_DISPUTES_RATE,  REP_SELLER_CANCELLATIONS_RATE,
SUM(CASE WHEN ITE.ITE_ITEM_STATUS LIKE '%A%' THEN 1 ELSE 0 END) AS LL,
SUM(CASE WHEN ITE.ITE_TAGS_JSON LIKE '%%poor_quality_picture%%' AND ITE.ITE_ITEM_STATUS LIKE '%A%' THEN 1 ELSE 0 END) LL_PQP,
SUM(CASE WHEN ITE.ITE_CATALOG_LISTING = 1  AND ITE.ITE_ITEM_STATUS LIKE '%A%' THEN 1 ELSE 0 END) AS LL_BB,
SUM(CASE WHEN ITE.ITE_PICKING_TYPE= 'fulfillment' AND ITE.ITE_ITEM_STATUS LIKE '%A%' THEN 1 ELSE 0 END) LL_FBM,
SUM(CASE WHEN ITE.CBO_COMBO_ID = UPPER('J') AND ITE.ITE_ITEM_STATUS LIKE '%A%'THEN 1 ELSE 0 END ) LL_PSJ,
SUM(CASE WHEN ITE.ITE_MP_FLAG = 'Y' AND ITE.ITE_ITEM_STATUS LIKE '%A%'THEN 1 ELSE 0 END ) LL_MP,
SUM(CASE WHEN ITE.ITE_SHIPPING_MODE_ID ='me2' AND  ITE.ITE_ITEM_STATUS LIKE '%A%' THEN 1 ELSE 0 END) LL_ME2,
SUM(CASE WHEN ITE.ITE_SHP_PAYMENT_TYPE_ID ='free_shipping' AND  ITE.ITE_ITEM_STATUS LIKE '%A%' THEN 1 ELSE 0 END) LL_FS,
SUM(CASE WHEN ITE.ITE_ITEM_STATUS LIKE '%A%' THEN ITE_QUANTITY_AVAILABLE ELSE 0 END) STOCK,
SUM(0) ADS
FROM WHOWNER.LK_ITE_ITEMS_PH ITE
JOIN TABLEAU_TBL.PROSPECTOS_SITIO PR -- Ajustar
ON PR.CUS_CUST_ID = ITE.CUS_CUST_ID_SEL
LEFT JOIN WHOWNER.BT_REP_SELLER_REPUTATION REP
ON ITE.CUS_CUST_ID_SEL= REP.CUS_CUST_ID_SEL
WHERE ITE.PHOTO_ID ='TODATE'
GROUP BY 1,2,3,4,5,6,7,8
)WITH DATA PRIMARY INDEX (SIT_SITE_ID, TIM_MONTH);





-- -------------------------------------------------------------------------------------------------------------------------- --
-- ---------------------------------------------VENTAS MENSUALES POR SELLER ------------------------------------------------- --
-- -------------------------------------------------------------------------------------------------------------------------- --
----- Ventas Nuevo-----
drop table TABLEAU_TBL.VENTAS;
CREATE MULTISET TABLE TABLEAU_TBL.VENTAS AS (
SEL BID.SIT_SITE_ID, TRUNC(BID.TIM_DAY_WINNING_DATE,'MONTH') TIM_MONTH_OF, TIM_MONTH, BID.CUS_CUST_ID_SEL CUS_CUST_ID, CAT.VERTICAL,
SUM(BID.BID_QUANTITY_OK) SIE,
SUM(BID.BID_SITE_CURRENT_PRICE * BID.BID_QUANTITY_OK) as GMVE_LC,
SUM(BID.BID_BASE_CURRENT_PRICE * BID.BID_QUANTITY_OK) as GMVE_USD,
--SUM(CASE WHEN COALESCE(BID.BID_FVF_BONIF, 'Y') = 'N' AND COALESCE(BID.AUTO_OFFER_FLAG, 0) <> 1 THEN BID.BID_QUANTITY_OK ELSE 0.0 END ) SIE_BILLABLE,
--SUM(CASE WHEN COALESCE(BID.BID_FVF_BONIF, 'Y') = 'N' AND COALESCE(BID.AUTO_OFFER_FLAG, 0) <> 1 THEN (BID.BID_SITE_CURRENT_PRICE * BID.BID_QUANTITY_OK) ELSE 0.0 END) GMVE_BILLABLE_LC,
--SUM(CASE WHEN COALESCE(BID.BID_FVF_BONIF, 'Y') = 'N' AND COALESCE(BID.AUTO_OFFER_FLAG, 0) <> 1 THEN (BID.BID_QUANTITY_OK * BID.BID_BASE_CURRENT_PRICE) ELSE 0.0 END) GMVE_BILLABLE_USD,
SUM(CASE WHEN TGMV_FLAG = 1  THEN BID.BID_QUANTITY_OK ELSE 0.0 END ) SIE_TX,
SUM(CASE WHEN TGMV_FLAG = 1 THEN (BID.BID_SITE_CURRENT_PRICE * BID.BID_QUANTITY_OK) ELSE 0.0 END) GMVE_TX_LC,
SUM(CASE WHEN TGMV_FLAG = 1 THEN (BID.BID_QUANTITY_OK * BID.BID_BASE_CURRENT_PRICE) ELSE 0.0 END) GMVE_TX_USD,
COUNT(DISTINCT(BID.ORD_ORDER_ID)) BIDS, -- Ordenes Distintas
case when COUNT(DISTINCT(BID.ORD_ORDER_ID)) =0 and MLIDER_FLAG ='N'  then 'New Lister' 
when COUNT(DISTINCT(BID.ORD_ORDER_ID)) >=1 and COUNT(DISTINCT(BID.ORD_ORDER_ID)) <=9 and MLIDER_FLAG ='N'  then 'New Seller'
when COUNT(DISTINCT(BID.ORD_ORDER_ID)) >=10 and COUNT(DISTINCT(BID.ORD_ORDER_ID)) <=25 and MLIDER_FLAG ='N' then 'Perfect Launch'
when COUNT(DISTINCT(BID.ORD_ORDER_ID)) >=26 and MLIDER_FLAG ='N'  then 'New Succ Seller'
when MLIDER_FLAG ='Y' then 'Egresado' end  Status,
MLIDER_FLAG


FROM TABLEAU_TBL.PROSPECTOS_SITIO PR 
LEFT JOIN WHOWNER.BT_BIDS BID
ON BID.CUS_CUST_ID_SEL= PR.CUS_CUST_ID
AND BID.SIT_SITE_ID = PR.SIT_SITE_ID
left JOIN WHOWNER.LK_SEGMENTO_SELLERS SEG
ON SEG.CUS_CUST_ID_SEL = BID.CUS_CUST_ID_SEL 
AND SEGMENTO ='LONG TAIL' 
JOIN WHOWNER.AG_LK_CAT_CATEGORIES_PH  CAT
ON  BID.CAT_CATEG_ID = CAT.CAT_CATEG_ID_L7
AND BID.SIT_SITE_ID = CAT.SIT_SITE_ID
AND CAT.PHOTO_ID = 'TODATE'
WHERE BID.SIT_SITE_ID IN ('MLA','MLM','MLB')
AND BID.PHOTO_ID='TODATE'
AND BID.ITE_GMV_FLAG=1
AND BID.MKT_MARKETPLACE_ID = 'TM'
AND BID.TIM_DAY_WINNING_DATE BETWEEN ADD_MONTHS( TRUNC(DATE, 'MONTH'),-7) AND DATE-1
GROUP BY 1,2,3,4,5,14 
)WITH DATA PRIMARY INDEX (SIT_SITE_ID, TIM_MONTH);



/*     ----Ventas viejo ----
drop table TABLEAU_TBL.VENTAS;
CREATE MULTISET TABLE TABLEAU_TBL.VENTAS AS (
SEL BID.SIT_SITE_ID, TRUNC(BID.TIM_DAY_WINNING_DATE,'MONTH') TIM_MONTH_OF, TIM_MONTH, BID.CUS_CUST_ID_SEL CUS_CUST_ID, CAT.VERTICAL,
SUM(BID.BID_QUANTITY_OK) SIE,
SUM(BID.BID_SITE_CURRENT_PRICE * BID.BID_QUANTITY_OK) as GMVE_LC,
SUM(BID.BID_BASE_CURRENT_PRICE * BID.BID_QUANTITY_OK) as GMVE_USD,
--SUM(CASE WHEN COALESCE(BID.BID_FVF_BONIF, 'Y') = 'N' AND COALESCE(BID.AUTO_OFFER_FLAG, 0) <> 1 THEN BID.BID_QUANTITY_OK ELSE 0.0 END ) SIE_BILLABLE,
--SUM(CASE WHEN COALESCE(BID.BID_FVF_BONIF, 'Y') = 'N' AND COALESCE(BID.AUTO_OFFER_FLAG, 0) <> 1 THEN (BID.BID_SITE_CURRENT_PRICE * BID.BID_QUANTITY_OK) ELSE 0.0 END) GMVE_BILLABLE_LC,
--SUM(CASE WHEN COALESCE(BID.BID_FVF_BONIF, 'Y') = 'N' AND COALESCE(BID.AUTO_OFFER_FLAG, 0) <> 1 THEN (BID.BID_QUANTITY_OK * BID.BID_BASE_CURRENT_PRICE) ELSE 0.0 END) GMVE_BILLABLE_USD,
SUM(CASE WHEN TGMV_FLAG = 1  THEN BID.BID_QUANTITY_OK ELSE 0.0 END ) SIE_TX,
SUM(CASE WHEN TGMV_FLAG = 1 THEN (BID.BID_SITE_CURRENT_PRICE * BID.BID_QUANTITY_OK) ELSE 0.0 END) GMVE_TX_LC,
SUM(CASE WHEN TGMV_FLAG = 1 THEN (BID.BID_QUANTITY_OK * BID.BID_BASE_CURRENT_PRICE) ELSE 0.0 END) GMVE_TX_USD,
COUNT(DISTINCT(BID.ORD_ORDER_ID)) BIDS -- Ordenes Distintas
FROM WHOWNER.BT_BIDS BID
JOIN TABLEAU_TBL.PROSPECTOS_SITIO PR
ON BID.CUS_CUST_ID_SEL= PR.CUS_CUST_ID
AND BID.SIT_SITE_ID = PR.SIT_SITE_ID
JOIN WHOWNER.AG_LK_CAT_CATEGORIES_PH  CAT
ON  BID.CAT_CATEG_ID = CAT.CAT_CATEG_ID_L7
AND BID.SIT_SITE_ID = CAT.SIT_SITE_ID
AND CAT.PHOTO_ID = 'TODATE'
WHERE BID.SIT_SITE_ID IN ('MLA','MLM','MLB')
AND BID.PHOTO_ID='TODATE'
AND BID.ITE_GMV_FLAG=1
AND BID.MKT_MARKETPLACE_ID = 'TM'
AND BID.TIM_DAY_WINNING_DATE BETWEEN ADD_MONTHS( TRUNC(DATE, 'MONTH'),-6) AND DATE-1
GROUP BY 1,2,3,4,5 
)WITH DATA PRIMARY INDEX (SIT_SITE_ID, TIM_MONTH);

*/




--CALL MELI_LIB.PR_DROP_TABLE ('TABLEAU_TBL','VENTAS_RESUME');
drop table TABLEAU_TBL.VENTAS_RESUME;
CREATE MULTISET TABLE TABLEAU_TBL.VENTAS_RESUME AS (
SEL SIT_SITE_ID, TIM_MONTH_OF, CUS_CUST_ID,
SUM (SIE) SIE,
SUM(GMVE_LC) GMVE_LC,
SUM(GMVE_USD) GMVE_USD,
SUM(SIE_TX) SIE_TX,
SUM(GMVE_TX_LC) GMVE_TX_LC,
SUM(GMVE_TX_USD) GMVE_TX_USD
FROM TABLEAU_TBL.VENTAS
GROUP BY 1,2,3
)WITH DATA PRIMARY INDEX (SIT_SITE_ID, TIM_MONTH_OF);
-- -------------------------------------------------------------------------------------------------------------------------- --
-- --------------------------------------------ARMADO CALENDRIO SELLER FOTO-------------------------------------------------- --
-- -------------------------------------------------------------------------------------------------------------------------- --
--CALL MELI_LIB.PR_DROP_TABLE ('TABLEAU_TBL','ALL_SELLERS_CALENDAR');
Drop table TABLEAU_TBL.ALL_SELLERS_CALENDAR;
CREATE MULTISET TABLE TABLEAU_TBL.ALL_SELLERS_CALENDAR AS (
SEL TRUNC(CAL.CALENDAR_DATE,'MONTH') TIM_MONTH_OF, PR.*
FROM WHOWNER_TBL_DESA.CALENDAR CAL, TABLEAU_TBL.PROSPECTOS_SITIO PR
WHERE TRUNC(CAL.CALENDAR_DATE,'MONTH') BETWEEN PR.TIM_MONTH AND PR.FECHA_TRACKEO + 366-- TRUNC(DATE-1,'MONTH')
)WITH DATA PRIMARY INDEX (SIT_SITE_ID, TIM_MONTH_OF);


-- -------------------------------------------------------------------------------------------------------------------------- --
-- ------------------------------------------------RESUMEN TABLA FINAL------------------------------------------------------- --
-- -------------------------------------------------------------------------------------------------------------------------- --
--CALL MELI_LIB.PR_DROP_TABLE ('TABLEAU_TBL','ALL_SELLERS');
drop table TABLEAU_TBL.ALL_SELLERS;
CREATE MULTISET TABLE TABLEAU_TBL.ALL_SELLERS AS (
SEL ALS.*, CUS_FIRST_PUBLICATION - CUS_RU_SINCE_DT DAY_FIRST_PUB,  COALESCE(SIE,0) SIE, COALESCE (GMVE_LC,0) GMVE_LC, COALESCE (GMVE_USD,0) GMVE_USD,
COALESCE(BID.SIE_TX, 0) SIE_TX, COALESCE(BID.GMVE_TX_LC, 0) GMVE_TX_LC,  COALESCE (GMVE_TX_USD,0) GMVE_TX_USD,
KPI.REP_CURRENT_LEVEL, REP_CLAIMS_RATE, REP_DELAYED_HT_RATE, REP_DISPUTES_RATE, REP_SELLER_CANCELLATIONS_RATE,
coalesce(KPI.LL,LL.LL) as LL,KPI.LL_PQP, KPI.LL_BB, KPI.LL_FBM, KPI.LL_PSJ,KPI.LL_MP, KPI.LL_ME2, KPI.LL_FS,KPI.STOCK,KPI.ADS,
BUYERS_QUESTION_WEEKEND,
BUYERS_QUES_WEEK_WORKING_HOURS,
BUYERS_QUES_POST_WORK_HOURS,
BUYERS_QUES_NIGHT_HOURS,
BUYERS_QUES_TOTAL,
ANSWERS_TMR_WEEKEND,
ANSWERS_TMR_WEEK_WORKING_HOURS,
ANSWERS_TMR_POST_WORK_HOURS,
ANSWERS_TMR_NIGHT_HOURS,
ANSWERS_TMR_TOTAL,
MINUTES_TMR_WEEKEND,
MINUTES_TMR_WEEK_WORKING_HOURS,
MINUTES_TMR_POST_WORK_HOURS,
MINUTES_TMR_NIGHT_HOURS,
MINUTES_TMR_TOTAL
 

FROM TABLEAU_TBL.ALL_SELLERS_CALENDAR ALS

LEFT JOIN TABLEAU_TBL.VENTAS_RESUME BID
ON BID.TIM_MONTH_OF = ALS.TIM_MONTH_OF
AND BID.CUS_CUST_ID = ALS.CUS_CUST_ID

LEFT JOIN TABLEAU_TBL.KPIS KPI
ON KPI.CUS_CUST_ID = ALS.CUS_CUST_ID
AND KPI.TIM_MONTH = ALS.TIM_MONTH_OF

LEFT JOIN TABLEAU_TBL.LL LL
ON LL.TIM_MONTH = ALS.TIM_MONTH_OF
AND LL.CUS_CUST_ID = ALS.CUS_CUST_ID
AND LL.TIM_MONTH < TRUNC(DATE-1,'MONTH')

left join TABLEAU_TBL.BT_MKT_SELLER_TMR TMR
on ALS.CUS_CUST_ID=TMR.CUS_CUST_ID_SEL
AND ALS.TIM_MONTH_OF =TMR.TIM_MONTH



)WITH DATA PRIMARY INDEX (SIT_SITE_ID, TIM_MONTH_OF);




drop table TABLEAU_TBL.ALL_SELLERS_HUNTING;
create table TABLEAU_TBL.ALL_SELLERS_HUNTING as (
select * from TABLEAU_TBL.ALL_SELLERS
) with data 







     
